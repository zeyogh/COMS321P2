public abstract class Instruction {
	
	private static int labelCount = 0;
	
	public Instruction() {
		//nothing in here
	}
	
	
	public int getLabelCount() {
		return labelCount;
	}
	
	public void incrementLabelCount() {
		labelCount++;
	}
	
	public int parseAddress(String address) { //for B and CB to use
		String trueAddress = "";
		if (address.charAt(0) == '0') {
			return Integer.parseInt(address, 2);
		}
		trueAddress = address.substring(0);
		trueAddress = trueAddress.replace('1', '2');
		trueAddress = trueAddress.replace('0', '1');
		trueAddress = trueAddress.replace('2', '0');
		return -1 * (Integer.parseInt(trueAddress, 2) + 1);
	}
	
	public static int binarySearch(String s, String[] arr) {
		
		int l = 0;
		int r = arr.length - 1;
		
		while (l <= r) {
			int mid = (l + r) / 2;
			
			int res = s.compareTo(arr[mid]);
			
			if (res == 0) {
				return mid;
			}
			else if (res > 0) // x is on the right side
	            l = mid + 1;

	        else                  // x is on the left side
	            r = mid - 1;
			
		}
		
		return -1;
		
	}
	
}
