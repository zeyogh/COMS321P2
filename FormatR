
public class RFormat extends Instruction {

	private static String[] dictionary = {"10001010000", "10001011000", "10011011000", "11001010000", "11001011000", "11010011010", "11010011011", "11010110000", "11101011000", "11111111100", "11111111101", "11111111110", "11111111111"};
	private static String[] names = {"AND", "ADD", "MUL", "EOR", "SUB", "LSR", "LSL", "BR", "SUBS", "PRNL", "PRNT", "DUMP", "HALT"};;
	
	private String opCode;
	private int Rm;
	private int shamt;
	private int Rn;
	private int Rd;
	
	public RFormat(String binary) {
		int bsIndex = binarySearch(binary.substring(0, 11), dictionary);
		int length = dictionary.length;
		opCode = names[bsIndex];
		
		if (bsIndex == length - 1 || bsIndex == length - 2 || bsIndex == length - 3 || bsIndex == length - 4) {
			Rm = 0;
			shamt = 0;
			Rn = 0;
			Rd = 0;
		}
		else {
			Rm = Integer.parseInt(binary.substring(11, 16), 2);
			shamt = Integer.parseInt(binary.substring(16, 22), 2);
			Rn = Integer.parseInt(binary.substring(22, 27), 2);
			Rd = Integer.parseInt(binary.substring(27, 32), 2);
		}
	}
	
	public static String[] getDictionary() {
		return dictionary;
	}
	
	@Override
	public String toString() {
		if (opCode.equals("BR") && Rn == 30) {
			return "BR LR";
		}
		else if (opCode.equals("BR")) {
			return "BR X" + Rn;
		}
		else if (opCode.equals("LSR") || opCode.equals("LSL")) {
			return opCode + " X" + Rd + ", X" + Rn + ", #" + shamt;
		}
		else if (opCode.charAt(0) == 'P' || opCode.charAt(0) == 'D' || opCode.charAt(0) == 'H') {
			return opCode;
		}
		return opCode + " X" + Rd + ", X" + Rn + ", X" + Rm;
	}
	
}
